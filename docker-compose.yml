version: '3'

services:
  node-exporter:
    user: 'root'
    image: 'prom/node-exporter'
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    network_mode: 'host'
    command: ['--path.procfs', '/host/proc',
              '--path.sysfs', '/host/sys',
              '--collector.filesystem.ignored-mount-points', '^/(sys|proc|dev|host|etc)($$|/)']
  prometheus:
    image: 'prom/prometheus'
    volumes:
      - './prometheus/rules:/etc/prometheus/rules'
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
    container_name: 'prometheus'
    network_mode: 'host'

  alertmanager:
    image: 'prom/alertmanager'
    volumes:
      - './alertmanager/:/etc/alertmanager/'
    container_name: 'alertmanager'
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    network_mode: 'host'

  grafana:
    image: 'grafana/grafana'
    volumes:
      - './grafana/ceph-dashboards.yaml:/etc/grafana/provisioning/dashboards/ceph-dashboards.yaml:ro'
      - './grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro'
      - './grafana/grafana.ini:/etc/grafana/grafana.ini:ro'
      - './grafana/grafana_ssl_cert.crt:/etc/grafana/grafana_ssl_cert.crt'
      - './grafana/grafana_ssl_cert.key:/etc/grafana/grafana_ssl_cert.key'
      - '../ceph/monitoring/grafana/dashboards:/var/lib/grafana/dashboards/:ro'
    environment:
      GF_INSTALL_PLUGINS: vonage-status-panel,grafana-piechart-panel
    container_name: 'grafana'
    network_mode: 'host'

  # keycloak:
  #   image: jboss/keycloak
  #   environment:
  #     KEYCLOAK_USER: admin
  #     KEYCLOAK_PASSWORD: admin
  #     DB_VENDOR: H2
  #   ports:
  #     - "8080:8080"

  # openldap:
  #   image: osixia/openldap:1.2.0
  #   environment:
  #     LDAP_TLS_VERIFY_CLIENT: try
  #   ports:
  #     - "2389:389"

  # phpldapadmin:
  #   image: osixia/phpldapadmin:0.7.1
  #   environment:
  #     PHPLDAPADMIN_LDAP_HOSTS: openldap
  #   ports:
  #     - "90:443"
  #   links:
  #     - openldap

  # shibboleth:
  #   build:
  #     context: ./shibboleth
  #     dockerfile: Dockerfile
  #   ports:
  #     - "9080:9080"
  #     - "9443:9443"
  #   links:
  #     - openldap

  # haproxy:
  #   image: 'haproxy'
  #   volumes:
  #     - './haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg'
  #   network_mode: 'host'
